name: lint build test

on: push

permissions:
  contents: read

jobs:
  lint-build-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - run: npm run lint
      - run: npm run build
      - run: npm test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: fluidware-team/natuin
  lint-dockerfile:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Lint Dockerfile with Hadolint
        uses: hadolint/hadolint-action@v3.1.0
  lint-editorconfig:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Lint with editorconfig-checker
        uses: editorconfig-checker/action-editorconfig-checker@v2.0.0
      - run: editorconfig-checker
  oci-build-and-publish:
    needs:
      - lint-build-test
      - lint-dockerfile
      - lint-editorconfig
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: ${{ github.ref_type == 'tag' }}
      - name: Login to GH container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.ref_type == 'tag' && vars.PUBLISH_GHCR == 'true' }}
      - name: Retrieve images metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=${{ github.repository }}
            name=ghcr.io/${{ github.repository }},enable=${{ vars.PUBLISH_GHCR == 'true' }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Build (and push) images
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref_type == 'tag' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
